<!DOCTYPE html>
<html>
<head lang="en">
<title>Linux Setup</title>
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1" />
<meta name="generator" content="HelpSmith 10.1 (Build 24.1202)" />
<link type="text/css" rel="stylesheet" href="../css/tree.css?b1fab730" />
<link type="text/css" rel="stylesheet" href="../css/topics.css?f0fe7ebf" />
<link type="text/css" rel="stylesheet" href="../css/apr.css?f0fe7ebf" />
<link type="text/css" rel="stylesheet" href="../css/app.css?f0fe7ebf" />
<script src="../js/jquery-3.7.1.min.js"></script>
<script src="../js/tree.min.js?b1fab730"></script>
<script src="../js/tabs.min.js?b1fab730"></script>
<script src="../js/jquery.cookie.js?b1fab730"></script>
<script src="../js/headroom.min.js?b1fab730"></script>
<script src="../js/app.min.js?b1fab730"></script>
<script src="../js/search.min.js?b1fab730"></script>
<!-- Web Help Topic -->
<script>
doAppStart();
</script>
</head>
<body>
	<header>
		<div id="hs-header-d">
			<div id="hs-content-h">
  <div id="hs-wrapper-h">
    <span id="hs-title-h">Synergy PDF API</span>
  </div>
</div>
		</div>
		<div id="hs-header-m">
			<div id="hs-content-m">
  <div id="hs-area-left">
    <div id="hs-menu" class="hs-menu-toggle">
      <span class="line1"></span>
      <span class="line2"></span>
      <span class="line3"></span>
    </div>
  </div>
  <div id="hs-area-center">
    <span id="hs-title-m">Synergy PDF API</span>
  </div>
  <div id="hs-area-right"></div>
</div>
		</div>
	</header>
	<nav id="hs-nav">
		<div id="hs-nav-content">
			<ul id="nav-tabs" role="tablist">
				<li class="hs-toc-tab" role="tab">
					<a href="#hs-toc-panel">Contents</a>
				</li>
				
				<li class="hs-search-tab" role="tab">
					<a href="#hs-search-panel">Search</a>
				</li>
			</ul>
			<div id="tabs-panels">
				<div class="hstabs-panel" id="hs-toc-panel" role="tabpanel">
					<div id="toc-tree" class="hs-tree"></div>
				</div>
				
				<div class="hstabs-panel" id="hs-search-panel" role="tabpanel">
					<div id="hs-search-content">
						<div id="search-form">
							<label for="squery" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<div id="search-box">
								<div class="search-container">
									<input type="text" id="squery" autocomplete="off">
								</div>
								<div class="search-btn" title="Search"></div>
							</div>
							<div id="options-box">
								<span class="text-label">Match:</span>
								<input type="radio" id="anywords" name="match" value="anywords" checked="checked"><label for="anywords" class="text-label">Any words</label>
								<input type="radio" id="phrase" name="match" value="phrase"><label for="phrase" class="text-label">Phrase</label>
							</div>
						</div>
						<div id="search-result"></div>
					</div>
				</div>
			</div>
		</div>
		</nav>
		<div id="hs-content">
			<main>
				<article>
					<div id="topic-content">
  <div id="content-box" class="page0">
    <h1 class="hd0"><span class="ts0">Setting up a Linux Environment</span></h1>
    <p><span class="ts1">&nbsp;</span></p>
    <h2 class="hd0"><span class="ts2">Download and Unzip the Code</span></h2>
    <p><span class="ts1">&nbsp;</span></p>
    <p><span class="ts1">Start by downloading a zip file containing a full copy of the environment from </span><a href="https://github.com/Synergex/SynPSG_PDF" target="_blank" class="hs0">GitHub</a><span class="ts1">. From the project home page, select the green Clone or Download option, then select Download ZIP. You can also use this </span><a href="https://github.com/Synergex/SynPSG_PDF/archive/master.zip" target="_blank" class="hs0">direct download link</a><span class="ts1">. The ZIP file that you download will be named SynPSG_PDF_master.zip and it will contain the very latest published version of the source code. Next copy the ZIP file to your Linux development system and extract the files to a location of your choice.</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <h2 class="hd0"><span class="ts2">Deploy the libHaru Files</span></h2>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">The next step is to copy the required libHaru shared object binaries to an appropriate location on your system. These binaries are provided inside compressed tar files in the LINUX/32 and LINUX/64 directories. One option is to place them in a directory that is included in the Linux PATH; another option is to deploy to the folder containing your executable. As the executable when using traditional Synergy is always dbr a good choice is to deploy the files to the $DBLDIR/bin folder for your installation.</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">These are the files that must be deployed:</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <div>
      <table class="tbl0">
        <tr class="row0">
          <td class="cell3">
            <h3 class="hd0"><span class="ts4">Linux System</span></h3>
          </td>
          <td class="cell4">
            <p><span class="ts11">libHaru Binaries</span></p>
          </td>
          <td class="cell5">
            <p><span class="ts11">Copy From</span></p>
          </td>
          <td class="cell6">
            <p><span class="ts11">Copy To</span></p>
          </td>
        </tr>
        <tr class="row0">
          <td class="cell3">
            <p><span class="ts7">32-bit</span></p>
          </td>
          <td class="cell4">
            <p><span class="ts7">libhpdf.so</span></p>
            <p class="ps1"><span class="ts5">&nbsp;</span></p>
          </td>
          <td class="cell5">
            <p><span class="ts7">LINUX\32</span></p>
          </td>
          <td class="cell6">
            <p><span class="ts7">$DBLDIR/bin</span></p>
          </td>
        </tr>
        <tr class="row0">
          <td class="cell3">
            <p><span class="ts7">64-bit</span></p>
          </td>
          <td class="cell4">
            <p><span class="ts7">libhpdf64.so</span></p>
            <p><span class="ts7">&nbsp;</span></p>
          </td>
          <td class="cell5">
            <p><span class="ts7">LINUX\64</span></p>
          </td>
          <td class="cell6">
            <p><span class="ts7">$DBLDIR/bin</span></p>
          </td>
        </tr>
      </table>
    </div>
    <p class="ps1"><span class="ts5">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">To make deploying the libHaru shared object binaries easy we have provided a Linux shell script named DeployHaru.sh that copies the required shared to the appropriate location. Execute the script like this:</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps3"><span class="ts7">. DeployHaru.sh</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <p><span class="ts1">You should see output like this (for a 64-bit system):</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">Extracting the 64-bit libHaru shared object library...</span></p>
    <p class="ps2"><span class="ts7">Copying shared object libhpdf64.so library to /synergy/1031/dbl/bin</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">Note that the libHaru shared object library is runtime components so you will also need to ship it along with your application and ensure that it is placed in an appropriate location on other systems where your application will execute.</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <h2 class="hd0"><span class="ts2">Building the API</span></h2>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">The API consists of a number of classes, enumerations and other items that can be manipulated in order to create PDF files. The code for these classes and enumerations can be found in various source files that you will find in the SOURCE\PDF directory.</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">To build the API on your system, go to the LINUX folder and execute the BuildPdf.sh shell script:</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">. BuildPdf.sh</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <p><span class="ts1">You should see output like this:</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">Prototyping PDF code...</span></p>
    <p class="ps2"><span class="ts7">Compiling PDF code...</span></p>
    <p class="ps2"><span class="ts7">Linking executable library PDF_EXE:SynPSG_PDF.elb...</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <h2 class="hd0"><span class="ts2">Building and Running the Sample Programs</span></h2>
    <p><span class="ts1">&nbsp;</span></p>
    <p><span class="ts1">The supplied environment includes several </span><a href="idh-topic310.htm" class="hs0">example programs</a><span class="ts1">&nbsp;that show how to use various features of the PDF API. The source code for the example programs is in the </span><span class="ts4">SOURCE\EXAMPLES</span><span class="ts1">&nbsp;folder. To build and run the sample programs:</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">.&nbsp; BuildExamples.sh</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <p><span class="ts1">You should see output like this:</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">Building examples...</span></p>
    <p class="ps2"><span class="ts7">- AttachFileTest.dbl</span></p>
    <p class="ps2"><span class="ts7">- AutoItems.dbl</span></p>
    <p class="ps2"><span class="ts7">- BlueAndRedBox.dbl</span></p>
    <p class="ps2"><span class="ts7">- DblMessagesReport.dbl</span></p>
    <p class="ps2"><span class="ts7">- DeliveryTicket.dbl</span></p>
    <p class="ps2"><span class="ts7">- DesignGrid.dbl</span></p>
    <p class="ps2"><span class="ts7">- HeaderBodyFooter.dbl</span></p>
    <p class="ps2"><span class="ts7">- Landscape132.dbl</span></p>
    <p class="ps2"><span class="ts7">- MixedPageOrientation.dbl</span></p>
    <p class="ps2"><span class="ts7">- Portrait100.dbl</span></p>
    <p class="ps2"><span class="ts7">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">Building test program PDF_EXE:PdfTest.dbr...</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <p><span class="ts1">Then execute the script to run the example programs:</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">.&nbsp; RunExamples.sh</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <p><span class="ts1">You should see a simple menu, like this:</span></p>
    <p><span class="ts7">&nbsp;</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 1.&nbsp; Auto Items Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 2.&nbsp; Blue and Red Boxes Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 3.&nbsp; DBL Messages Report Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 4.&nbsp; Delivery Ticket Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 5.&nbsp; Design Grid Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 6.&nbsp; Header, Body and Footer Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 7.&nbsp; Landscape 132 Column Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 8.&nbsp; Mixed Page Orientation Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 9.&nbsp; Portrait 100 Column Test</span></p>
    <p><span class="ts7">&nbsp;</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; Select an option (E to exit):</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">You can select test programs to run by selecting the number from the menu; each of the example programs creates a PDF file in the subdirectory named LINUX/out.</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <h2 class="hd0"><span class="ts2">Incorporating the API into your Development Environment</span></h2>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">Before you can use the classes of the PDF API from within your own code base you will need to do two things:</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps0"><span style="font-family: Tahoma; font-size: 10pt; color: Black">1.</span><span style="display: inline-block; width: 13px"></span><span class="ts1">Make the strong prototyping header files available in your development environment.</span></p>
    <p class="ps0"><span style="font-family: Tahoma; font-size: 10pt; color: Black">2.</span><span style="display: inline-block; width: 13px"></span><span class="ts1">Link against SynPSG_PDF.elb</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts4">Prototype Files</span></h3>
    <h3 class="hd0"><span class="ts1">Because the API is implemented using object oriented code it is necessary to prototype the code and provide those prototypes to the compiler when compiling application code that uses the API. The supplied environment already creates the required prototype files, you will find them in the LINUX/hdr folder so it is simply a case of making them available in your development environment. This can be achieved by specifying the &quot;import directory&quot; by setting the SYNIMPDIR environment variable to include the path to the LINUX/hdr folder. SYNIMPDIR is a &quot;search list&quot; logical that supports several paths being specified separated by commas, so if you already have it set in your environment then simply add the path to the LINUX/hdr folder; if not then set it for the first time.</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">Another option is to change the location where the supplied environment creates the prototype files in the first place, to a location where other prototype files already exist for your environment. You could do that by editing the BuildPdf.sh and BuildExamples.sh shell scripts and changing the values for both the SYNEXPDIR and SYNIMPDIR environment variables.</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts4">Link against SynPSG_PDF.elb</span></h3>
    <h3 class="hd0"><span class="ts1">Having built the PDF API environment (above) you will find the resulting ELB in the LINUX/exe folder. You could modify your own build environment to link against it in that location (you should ALWAYS do so via an environment variable that points to the location), or you could change the location that the ELB is created in by editing the BuildPdf.sh, BuildExamples.sh and RunExamples.sh shell scripts and changing the value of the PDF_EXE environment variable.</span></h3>
    <p class="ps1"><span class="ts5">&nbsp;</span></p>
    <p class="ps1"><span class="ts5">&nbsp;</span></p>
  </div>
</div>
				</article>
			</main>
		</div>
		<footer>
			<div id="hs-footer"><div id="hs-content-f">
  <div id="hs-wrapper-f">
    <span id="hs-title-f">Copyright &copy; 2015 Synergex International, Inc.</span>
  </div>
</div></div>
		</footer>
</body>
</html>