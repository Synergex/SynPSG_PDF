<!DOCTYPE html>
<html>
<head lang="en">
<title>OpenVMS Setup</title>
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1" />
<meta name="generator" content="HelpSmith 10.1 (Build 24.1202)" />
<link type="text/css" rel="stylesheet" href="../css/tree.css?b1fab730" />
<link type="text/css" rel="stylesheet" href="../css/topics.css?af09f847" />
<link type="text/css" rel="stylesheet" href="../css/apr.css?af09f847" />
<link type="text/css" rel="stylesheet" href="../css/app.css?af09f847" />
<script src="../js/jquery-3.7.1.min.js"></script>
<script src="../js/tree.min.js?b1fab730"></script>
<script src="../js/tabs.min.js?b1fab730"></script>
<script src="../js/jquery.cookie.js?b1fab730"></script>
<script src="../js/headroom.min.js?b1fab730"></script>
<script src="../js/app.min.js?b1fab730"></script>
<script src="../js/search.min.js?b1fab730"></script>
<!-- Web Help Topic -->
<script>
doAppStart();
</script>
</head>
<body>
	<header>
		<div id="hs-header-d">
			<div id="hs-content-h">
  <div id="hs-wrapper-h">
    <span id="hs-title-h">Synergy PDF API</span>
  </div>
</div>
		</div>
		<div id="hs-header-m">
			<div id="hs-content-m">
  <div id="hs-area-left">
    <div id="hs-menu" class="hs-menu-toggle">
      <span class="line1"></span>
      <span class="line2"></span>
      <span class="line3"></span>
    </div>
  </div>
  <div id="hs-area-center">
    <span id="hs-title-m">Synergy PDF API</span>
  </div>
  <div id="hs-area-right"></div>
</div>
		</div>
	</header>
	<nav id="hs-nav">
		<div id="hs-nav-content">
			<ul id="nav-tabs" role="tablist">
				<li class="hs-toc-tab" role="tab">
					<a href="#hs-toc-panel">Contents</a>
				</li>
				
				<li class="hs-search-tab" role="tab">
					<a href="#hs-search-panel">Search</a>
				</li>
			</ul>
			<div id="tabs-panels">
				<div class="hstabs-panel" id="hs-toc-panel" role="tabpanel">
					<div id="toc-tree" class="hs-tree"></div>
				</div>
				
				<div class="hstabs-panel" id="hs-search-panel" role="tabpanel">
					<div id="hs-search-content">
						<div id="search-form">
							<label for="squery" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<div id="search-box">
								<div class="search-container">
									<input type="text" id="squery" autocomplete="off">
								</div>
								<div class="search-btn" title="Search"></div>
							</div>
							<div id="options-box">
								<span class="text-label">Match:</span>
								<input type="radio" id="anywords" name="match" value="anywords" checked="checked"><label for="anywords" class="text-label">Any words</label>
								<input type="radio" id="phrase" name="match" value="phrase"><label for="phrase" class="text-label">Phrase</label>
							</div>
						</div>
						<div id="search-result"></div>
					</div>
				</div>
			</div>
		</div>
		</nav>
		<div id="hs-content">
			<main>
				<article>
					<div id="topic-content">
  <div id="content-box" class="page0">
    <h1 class="hd0"><span class="ts0">Setting up an OpenVMS Environment</span></h1>
    <p><span class="ts1">&nbsp;</span></p>
    <h2 class="hd0"><span class="ts2">Download and Unzip the Code</span></h2>
    <p><span class="ts1">&nbsp;</span></p>
    <p><span class="ts1">Start by downloading a zip file containing a full copy of the environment from </span><a href="https://github.com/Synergex/SynPSG_PDF" target="_blank" class="hs0">GitHub</a><span class="ts1">. From the project home page, select the green Clone or Download option, then select Download ZIP. You can also use this </span><a href="https://github.com/Synergex/SynPSG_PDF/archive/master.zip" target="_blank" class="hs0">direct download link</a><span class="ts1">. The ZIP file that you download will be named SynPSG_PDF_master.zip and it will contain the very latest published version of the source code. Next copy the ZIP file to your Linux development system and extract the files to a directory of your choice.</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts4">IMPORTANT:</span><span class="ts1">&nbsp;Because of the requirements for the prototype files that will be created you must extract the files in the ZIP file onto an ODS-5 formatted disk volume. To determine the type of a disk volume you can use the DCL command SHOW DEVICE/FULL &lt;device&gt;. You should look for the phrase ODS-5 listed towards the end of the information, after the label &quot;Volume Status&quot;. The traditional and very common alternative to ODS-5 is the older ODS-2 format. If you do not have an ODS-5 formatted volume available then you may not be able to use the PDF API environment, or indeed any other object oriented code.</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">You will find the PDF API's OpenVMS environment in the [.VMS] sub-directory.</span></h3>
    <p class="ps1"><span class="ts5">&nbsp;</span></p>
    <h2 class="hd0"><span class="ts2">Extract the Files</span></h2>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">The files needed to build the OpenVMS environment are supplied in a second ZIP file in order to preserve their VMS file attributes, so the next step is to extract the files from the ZIP file. Go to the VMS folder and execute the UNZIPIT.COM command procedure like this:</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps3"><span class="ts7">$ @UNZIPIT.COM</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <p><span class="ts1">You should see output like this:</span></p>
    <p class="ps2"><span class="ts7">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">Archive:&nbsp; DKA100:[DEV.SynPSG_PDF.VMS]PDFVMS.ZIP;1</span></p>
    <p class="ps2"><span class="ts7">&nbsp;&nbsp; creating: [.axp]</span></p>
    <p class="ps2"><span class="ts7">&nbsp;&nbsp; creating: [.axp.1031]</span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: [.axp.1031]libhpdf.exe&nbsp; [text]&nbsp; </span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: [.axp.1031]pdfdbl.exe&nbsp;&nbsp; [binary]</span></p>
    <p class="ps2"><span class="ts7">&nbsp;&nbsp; creating: [.axp.953b]</span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: [.axp.953b]libhpdf.exe&nbsp; [text]&nbsp; </span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: [.axp.953b]pdfdbl.exe&nbsp;&nbsp; [binary]</span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: build_examples.com&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [text]&nbsp; </span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: build_pdf.com&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [text]&nbsp; </span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: extract.com&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [text]&nbsp; </span></p>
    <p class="ps2"><span class="ts7">&nbsp;&nbsp; creating: [.ia64]</span></p>
    <p class="ps2"><span class="ts7">&nbsp;&nbsp; creating: [.ia64.1031]</span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: [.ia64.1031]libhpdf.exe&nbsp; [binary]</span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: [.ia64.1031]pdfdbl.exe&nbsp; [binary]</span></p>
    <p class="ps2"><span class="ts7">&nbsp;&nbsp; creating: [.ia64.953b]</span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: [.ia64.953b]libhpdf.exe&nbsp; [binary]</span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: [.ia64.953b]pdfdbl.exe&nbsp; [binary]</span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: makeshare.dbl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [text]&nbsp; </span></p>
    <p class="ps2"><span class="ts7">&nbsp;&nbsp; creating: [.media]</span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: [.media]arialn.ttf&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [binary]</span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: [.media]arialnb.ttf&nbsp;&nbsp;&nbsp;&nbsp; [binary]</span></p>
    <p class="ps2"><span class="ts7">&nbsp;extracting: [.media]sdelogo.png&nbsp;&nbsp;&nbsp;&nbsp; [binary]</span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: pdf.opt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [text]&nbsp; </span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: setup.com&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [text]&nbsp; </span></p>
    <p class="ps2"><span class="ts7">&nbsp; inflating: synpsg_pdf.com&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [binary]</span></p>
    <p class="ps6"><span class="ts12">&nbsp; inflating: zipit.com&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [text]</span><span class="ts13">&nbsp;</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <h2 class="hd0"><span class="ts2">Editing the Setup Procedure</span></h2>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">The supplied environment includes a DCL command procedure named SETUP.COM which defines the environment in which the PDF API can be built and executed. By default this procedure is configured assuming that you are running Synergy/DE 10.3.1 or higher. If you are running an older version of Synergy then you will need to edit the file and reverse the comment characters on the following two lines:</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps7"><span class="ts10">$ !VERSION = &quot;953B&quot;</span></p>
    <p class="ps7"><span class="ts10">$ VERSION = &quot;1031&quot;</span></p>
    <p class="ps1"><span class="ts5">&nbsp;</span></p>
    <h2 class="hd0"><span class="ts2">Building the API</span></h2>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">The PDF API consists of a number of classes and enumerations that can be manipulated in order to create PDF files. The code for these classes and enumerations can be found in various source files in the [.SOURCE.PDF] directory. To build the API as a shared image, go to the [.VMS] directory and execute the command procedure BUILD_PDF.COM:</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">$ @BUILD_PDF.COM</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">You should see output like this:</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">Prototyping PDF code...</span></p>
    <p class="ps2"><span class="ts7">Compiling PDF code...</span></p>
    <p class="ps2"><span class="ts7">Creating object library...</span></p>
    <p class="ps2"><span class="ts7">Linking shared image...</span></p>
    <p class="ps2"><span class="ts7">Created SYNPSG_PDF.COM</span></p>
    <p class="ps2"><span class="ts7">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">Linking shared image PDF_EXE:SYNPSG_PDF.EXE</span></p>
    <p class="ps6"><span class="ts14">&nbsp;</span></p>
    <p><span class="ts1">You have now compiled the code of the PDF API into a shared image that programs can be linked against.</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <h2 class="hd0"><span class="ts2">Building and Running the Sample Programs</span></h2>
    <p><span class="ts1">&nbsp;</span></p>
    <p><span class="ts1">The supplied environment includes several </span><a href="idh-topic310.htm" class="hs0">example routines</a><span class="ts1">&nbsp;that create various PDF files which show how to use various features of the PDF API, and a simple menu application that can be used to execute each of the samples. You can find the source code for the example programs is in the directory [.SOURCE.EXAMPLES]. To build and run the sample programs and menu:</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">$ @BUILD_EXAMPLES.COM</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">You should see output like this:</span></h3>
    <p class="ps7"><span class="ts14">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">Building example programs...</span></p>
    <p class="ps2"><span class="ts7">&nbsp;- Building ATTACHFILETEST</span></p>
    <p class="ps2"><span class="ts7">&nbsp;- Building AUTOITEMS</span></p>
    <p class="ps2"><span class="ts7">&nbsp;- Building BLUEANDREDBOX</span></p>
    <p class="ps2"><span class="ts7">&nbsp;- Building DBLMESSAGESREPORT</span></p>
    <p class="ps2"><span class="ts7">&nbsp;- Building DELIVERYTICKET</span></p>
    <p class="ps2"><span class="ts7">&nbsp;- Building DESIGNGRID</span></p>
    <p class="ps2"><span class="ts7">&nbsp;- Building HEADERBODYFOOTER</span></p>
    <p class="ps2"><span class="ts7">&nbsp;- Building LANDSCAPE132</span></p>
    <p class="ps2"><span class="ts7">&nbsp;- Building MIXEDPAGEORIENTATION</span></p>
    <p class="ps2"><span class="ts7">&nbsp;- Building PORTRAIT100</span></p>
    <p class="ps2"><span class="ts7">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">To run the examples type $ RUN PDF_EXE:PDFTEST.EXE</span></p>
    <p class="ps7"><span class="ts14">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">To run the sample programs menu:</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">$ RUN PDF_EXE:PDFTEST.EXE</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">You will see a simple menu that looks like this:</span></h3>
    <p><span class="ts7">&nbsp;</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 1.&nbsp; Auto Items Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 2.&nbsp; Blue and Red Boxes Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 3.&nbsp; DBL Messages Report Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 4.&nbsp; Delivery Ticket Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 5.&nbsp; Design Grid Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 6.&nbsp; Header, Body and Footer Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 7.&nbsp; Landscape 132 Column Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 8.&nbsp; Mixed Page Orientation Test</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; 9.&nbsp; Portrait 100 Column Test</span></p>
    <p><span class="ts7">&nbsp;</span></p>
    <p><span class="ts7">&nbsp;&nbsp;&nbsp;&nbsp; Select an option (E to exit):</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">You can select test programs to run by selecting the number from the menu; each of the example programs creates a PDF file in the directory [.VMS.OUT].</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <h2 class="hd0"><span class="ts2">Incorporating the PDF API into your Development Environment</span></h2>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">Before you can use the PDF API classes from within your own code base you will need to do two things:</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps0"><span style="font-family: Tahoma; font-size: 10pt; color: Black">1.</span><span style="display: inline-block; width: 13px"></span><span class="ts1">Make the strong prototyping header files available in your development environment.</span></p>
    <p class="ps0"><span style="font-family: Tahoma; font-size: 10pt; color: Black">2.</span><span style="display: inline-block; width: 13px"></span><span class="ts1">Link against PDF_EXE:SYNPSG_PDF.EXE</span></p>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts4">Prototype Files</span></h3>
    <h3 class="hd0"><span class="ts1">Because PDF API is implemented using object oriented code it is necessary to prototype the code and provide those prototypes to the compiler when compiling application code that uses the API. The supplied environment already creates the required prototype files, you will find them in the directory [.VMS.HDR] so it is simply a case of making them available in your development environment. This can be achieved by specifying the &quot;import directory&quot; by setting the SYNIMPDIR environment variable to include the path to the [.VMS.HDR] directory. SYNIMPDIR is a &quot;search list&quot; logical that supports several paths being specified separated by commas, so if you already have it set in your environment then simply add the path to the [.VMS.HDR] directory; if not then set it for the first time.</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts1">Another option is to change the location where the supplied environment creates the prototype files in the first place, to a location where other prototype files already exist for your environment. You could do that by editing the SETUP.COM command procedure and changing the values for both the SYNEXPDIR and SYNIMPDIR logical name definitions.</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <h3 class="hd0"><span class="ts4">Link against the SynPSG_PDF.exe Shared Image</span></h3>
    <h3 class="hd0"><span class="ts1">Having built the SynPSG_PDF environment (above) you will find the resulting shared image in a folder that is pointed to by the PDF_EXE: logical name. You will find a linker options file named PDF.OPT in the [.VMS] directory; you can use this options file to link your programs against the libHaru and PSG API shared images, like this:</span></h3>
    <p><span class="ts1">&nbsp;</span></p>
    <p class="ps2"><span class="ts7">$ DIB/OPT MYPROGRAM.DBL</span></p>
    <p class="ps2"><span class="ts7">$ LINK MYPROGRAM,PDF/OPT,SYS$SHARE:SYNRTL/OPT</span></p>
    <p class="ps1"><span class="ts5">&nbsp;</span></p>
    <p class="ps1"><span class="ts5">&nbsp;</span></p>
  </div>
</div>
				</article>
			</main>
		</div>
		<footer>
			<div id="hs-footer"><div id="hs-content-f">
  <div id="hs-wrapper-f">
    <span id="hs-title-f">Copyright &copy; 2015 Synergex International, Inc.</span>
  </div>
</div></div>
		</footer>
</body>
</html>